rule whippet_index:
    input:
        Genome = config["Genome_fasta"],
        ME_GTF = "Report/out.high_quality.gtf.txt"
    params:
        bin = config["whippet_bin_folder"]
    output:
        "Whippet/Index/whippet.jls",
        "Whippet/Index/whippet.jls.exons.tab.gz"
    shell:
        "julia {params.bin}/whippet-index.jl --fasta {input.Genome} --gtf {input.ME_GTF} --index {output[0]}"


rule  whippet_quant:
    input:
        'FASTQ/{sample}.fastq',
        "Whippet/Index/whippet.jls"
    params:
        bin = config["whippet_bin_folder"],
        output = "Whippet/Quant/{sample}"
    output:
        "Whippet/Quant/{sample}.gene.tpm.gz",
        "Whippet/Quant/{sample}.isoform.tpm.gz",
        "Whippet/Quant/{sample}.jnc.gz",
        "Whippet/Quant/{sample}.map.gz",
        "Whippet/Quant/{sample}.psi.gz"
    shell:
        "julia {params.bin}/whippet-quant.jl {input[0]}  -x {input[1]} -o {params.output}"

rule unzip_quant:
    input:
        "Whippet/Quant/{sample}.psi.gz"
    output:
        temp("Whippet/Quant/{sample}.psi")
    shell:
        "zcat {input} > {output}"

rule gzip_ME_psi_to_quant:
    input:
        ME_psi =  "Whippet/Quant/{sample}.ME.psi"
    output:
        ME_psi_gz =  "Whippet/Quant/{sample}.ME.psi.gz"
    shell:
        "gzip {input}"

rule ME_psi_to_quant:
    input:
        ME_PSI = "Round2/{sample}.sam.pre_processed.filter1.ME_SJ_coverage.PSI",
        whippet_PSI = "Whippet/Quant/{sample}.psi"
    output:
        ME_psi =  "Whippet/Quant/{sample}.ME.psi"
    shell:
        "python3 src/Replace_PSI_whippet.py {input} > {output} "

condition1 = config["condition1"].split(",") 
condition2 = config["condition2"].split(",")  
comparison_name = config["comparison_name"]


rule whippet_delta:
    input:
        expand("Whippet/Quant/{sample}.psi.gz", sample=condition1),
        expand("Whippet/Quant/{sample}.psi.gz", sample=condition2)
    output:
        "Whippet/Delta/" + comparison_name + ".diff.gz"
    params:
        bin = config["whippet_bin_folder"],
        a = ",".join(expand("Whippet/Quant/{sample}.psi.gz", sample=condition1)),
        b = ",".join(expand("Whippet/Quant/{sample}.psi.gz", sample=condition2)),
        o = "Whippet/Delta/" + comparison_name
    shell:
        "julia {params.bin}/whippet-delta.jl -a {params.a} -b {params.b} -o {params.o}"


rule whippet_delta_ME:
    input:
        expand("Whippet/Quant/{sample}.ME.psi.gz", sample=condition1),
        expand("Whippet/Quant/{sample}.ME.psi.gz", sample=condition2)
    output:
        "Whippet/Delta/" + comparison_name + ".ME.diff.gz"
    params:
        bin = config["whippet_bin_folder"],
        a = ",".join(expand("Whippet/Quant/{sample}.ME.psi.gz", sample=condition1)),
        b = ",".join(expand("Whippet/Quant/{sample}.ME.psi.gz", sample=condition2)),
        o = "Whippet/Delta/" + comparison_name + ".ME"
    shell:
        "julia {params.bin}/whippet-delta.jl -a {params.a} -b {params.b} -o {params.o}"


rule differential_inclusion:
    input:
        "Whippet/Delta/" + comparison_name + ".diff.gz",
        "Whippet/Delta/" + comparison_name + ".ME.diff.gz"
        
