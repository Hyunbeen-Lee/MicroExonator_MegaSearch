#version 0.9.0
configfile : "config.yaml"
DATA = set([])

def str2bool(v):
  if v==True:
    return True
  elif v==False:
    return False
  else:
    return v.lower() in ("yes", "true", "t", "1")

rule quant:
    input:
        "Report/out.high_quality.txt"
        #"Report/out_filtered_ME.txt"
        #expand("Genome_aligments/{Software}/TOTAL.exons.{Software}", Software=["Hisat2", "STAR", "Olego"])
        # expand("Genome_aligments/{Software}/{sample}.sam.SJ_count", sample=DATA, Software=["Hisat2", "STAR"]),
        #expand("Whippet/Quant/{sample}.psi.gz", sample=DATA),
        #expand("Ground_Truth/{sample}.GT.SJ_count", sample=DATA)

rule discovery:
    input:
        "Round2/ME_canonical_SJ_tags.de_novo.fa"


#### MicroExonator ####

if ("deletion_penalty" in config)==False:
    config["deletion_penalty"]="6"
    
if ("insertion_penalty" in config)==False:
    config["insertion_penalty"]="2"

config["indel_penalty"] = ",".join(str(config["deletion_penalty"]), str(config["insertion_penalty"]))


include : "rules/init.skm"
include : "rules/Get_data.skm"


rule bamfiles:
    input:
        expand("Whippet/BAM/{samples}.bam", samples=DATA), 
        expand("Whippet/BAM/{samples}.bam.bai", samples=DATA)


if ("downstream_only" in config)==False:

    include : "rules/Round1.skm"
    include : "rules/Round1_post_processing.skm"
    include : "rules/Round2.skm"
    include : "rules/Round2_post_processing.skm"

elif str2bool(config["downstream_only"])==False:

    include : "rules/Round1.skm"
    include : "rules/Round1_post_processing.skm"
    include : "rules/Round2.skm"
    include : "rules/Round2_post_processing.skm"

else:
    pass

##### Downstream Analysis ####

if "whippet_bin_folder" in config:
   include : "rules/Whippet.skm"
   
#### Single Cell ###

if not "Single_Cell" in config:
   config["Single_Cell"]="F"

if str2bool(config["Single_Cell"]):
   include : "rules/Snakepool.py"   

#### Benchmark ####

#include : "rules/Benchmark.skm"
